.Dd September 19, 2009
.Dt libesedb 3
.Os libesedb
.Sh NAME
.Nm libesedb.h
.Nd Library to support the Extensible Storage Engine (ESE) Database File (EDB) format
.Sh LIBRARY
.Lb libesedb
.Sh SYNOPSIS
.In libesedb.h
.Pp
Support functions
.Ft const char *
.Fn libesedb_get_version "void"
.Ft int
.Fn libesedb_check_file_signature "const char *filename, libesedb_error_t **error"
.Pp
Available when compiled with wide character string support:
.Ft int
.Fn libesedb_check_file_signature_wide "const wchar_t *filename, libesedb_error_t **error"
.Pp
Available when compiled with libbfio support:
.Ft int
.Fn libesedb_check_file_signature_file_io_handle "libbfio_handle_t *bfio_handle, libesedb_error_t **error"
.Pp
Notify functions
.Ft void
.Fn libesedb_notify_set_verbose "int verbose"
.Ft int
.Fn libesedb_notify_set_stream "FILE *stream, libesedb_error_t **error"
.Ft int
.Fn libesedb_notify_stream_open "const char *filename, libesedb_error_t **error"
.Ft int
.Fn libesedb_notify_stream_close "libesedb_error_t **error"
.Pp
Error functions
.Ft void 
.Fn libesedb_error_free "libesedb_error_t **error"
.Ft int
.Fn libesedb_error_fprint "libesedb_error_t *error, FILE *stream"
.Ft int
.Fn libesedb_error_sprint "libesedb_error_t *error, char *string, size_t size"
.Ft int 
.Fn libesedb_error_backtrace_fprint "libesedb_error_t *error, FILE *stream"
.Ft int
.Fn libesedb_error_backtrace_sprint "libesedb_error_t *error, char *string, size_t size"
.Pp
File functions
.Ft int
.Fn libesedb_file_initialize "libesedb_file_t **file, libesedb_error_t **error"
.Ft int
.Fn libesedb_file_free "libesedb_file_t **file, libesedb_error_t **error"
.Ft int
.Fn libesedb_file_open "libesedb_file_t *file, const char *filename, int flags, libesedb_error_t **error"
.Ft int
.Fn libesedb_file_close "libesedb_file_t *file, libesedb_error_t **error"
.Ft int
.Fn libesedb_file_get_ascii_codepage "libesedb_file_t *file, int *ascii_codepage, libesedb_error_t **error"
.Ft int
.Fn libesedb_file_set_ascii_codepage "libesedb_file_t *file, int ascii_codepage, libesedb_error_t **error"
.Ft int
.Fn libesedb_file_get_format_version "libesedb_file_t *file, uint32_t *format_version, uint32_t *format_revision, libesedb_error_t **error"
.Ft int
.Fn libesedb_file_get_creation_format_version "libesedb_file_t *file, uint32_t *format_version, uint32_t *format_revision, libesedb_error_t **error"
.Ft int
.Fn libesedb_file_get_page_size "libesedb_file_t *file, uint32_t *page_size, libesedb_error_t **error"
.Ft int
.Fn libesedb_file_get_amount_of_tables "libesedb_file_t *file, int *amount_of_tables, libesedb_error_t **error"
.Ft int
.Fn libesedb_file_get_table "libesedb_file_t *file, int table_entry, libesedb_table_t **table, libesedb_error_t **error"
.Ft int
.Fn libesedb_file_get_amount_of_indexes "libesedb_file_t *file, int *amount_of_indexes, libesedb_error_t **error"
.Ft int
.Fn libesedb_file_get_index "libesedb_file_t *file, int index_entry, libesedb_index_t **index, libesedb_error_t **error"
.Pp
Available when compiled with wide character string support:
.Ft int
.Fn libesedb_file_open_wide "libesedb_file_t *file, const wchar_t *filename, int flags, libesedb_error_t **error"
.Pp
Available when compiled with libbfio support:
.Ft int
.Fn libesedb_file_open_file_io_handle "libesedb_file_t *file, libbfio_handle_t *file_io_handle, int flags, libesedb_error_t **error"
.Pp
Table functions
.Ft int
.Fn libesedb_table_free "libesedb_table_t **table, libesedb_error_t **error"
.Ft int
.Fn libesedb_table_get_identifier "libesedb_table_t *table, uint32_t *identifier, libesedb_error_t **error"
.Ft int
.Fn libesedb_table_get_utf8_name_size "libesedb_table_t *table, size_t *utf8_string_size, libesedb_error_t **error"
.Ft int
.Fn libesedb_table_get_utf8_name "libesedb_table_t *table, uint8_t *utf8_string, size_t utf8_string_size, libesedb_error_t **error"
.Pp
Index functions
.Ft int
.Fn libesedb_index_free "libesedb_index_t **index, libesedb_error_t **error"
.Ft int
.Fn libesedb_index_get_identifier "libesedb_index_t *index, uint32_t *identifier, libesedb_error_t **error"
.Ft int
.Fn libesedb_index_get_utf8_name_size "libesedb_index_t *index, size_t *utf8_string_size, libesedb_error_t **error"
.Ft int
.Fn libesedb_index_get_utf8_name "libesedb_index_t *index, uint8_t *utf8_string, size_t utf8_string_size, libesedb_error_t **error"
.Sh DESCRIPTION
The
.Fn libesedb_get_version
function is used to retrieve the library version.
.Sh RETURN VALUES
Most of the functions return NULL or -1 on error, dependent on the return type. For the actual return values refer to libesedb.h
.Sh ENVIRONMENT
None
.Sh FILES
None
.Sh NOTES
libesedb uses mainly UTF-8 encoded strings except for filenames, but provides several UTF-16 functions.

ASCII strings in a EDB file contain an extended ASCII string using the codepage of the system it was created on. The function
.Ar libesedb_set_ascii_codepage
 allows to set the required codepage for reading and writing. The default codepage is ASCII and replaces all extended characters to the Unicode replacement character (U+fffd) when reading and the ASCII substitude character (0x1a) when writing.

libesedb allows to be compiled with wide character support.
To compile libesedb with wide character support use
.Ar ./configure --enable-wide-character-type=yes
or pass the definition
.Ar HAVE_WIDE_CHARACTER_TYPE
 to the compiler (i.e. in case of Microsoft Visual Studio (MSVS) C++).

To have other code to determine if libesedb was compiled with wide character support it defines
.Ar LIBESEDB_HAVE_WIDE_CHARACTER_TYPE
 in libesedb/features.h.

libesedb allows to be compiled with chained IO support using libbfio.
libesedb will automatically detect if a compatible version of libbfio is available.

To have other code to determine if libesedb was compiled with libbfio support it defines
.Ar LIBESEDB_HAVE_BFIO
 in libesedb/features.h.

.Sh BUGS
Please report bugs of any kind to <forensics@hoffmannbv.nl> or on the project website:
http://libesedb.sourceforge.net/
.Sh AUTHOR
These man pages were written by Joachim Metz.
.Sh COPYRIGHT
Copyright 2009 Joachim Metz, Hoffmann Investigations <forensics@hoffmannbv.nl> and contributors.
This is free software; see the source for copying conditions. There is NO warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
.Sh SEE ALSO
the libesedb.h include file
