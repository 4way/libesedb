TODO
* combine libesedb_io_handle_read_page with libesedb_page_read
  - need libesedb_page_read for recovery ?

* page tree on demand
  - check sanity of page value 0 
* clean up
  - libesedb_data_type_definition remove offset
* handle default value
  - need database which uses default value
* handle compressed values inside the library
* error tolerance probe test for the page size using the backup database header
* parse variable types even when they are not part of the table catalog definition
* add support for build in table number 1
* implement cloning of items for improved asynchronous and multi threaded usage

libesedb:
* add get_table_by_object_identifier function
* ECC checksum
  - non 4 byte modulus buffer support
  - add alignment optimization
  - error correction
  - Windows 7 extended checksum ?
* template table
  - what about non-tagged data types
* multi value
  - what about multi value 0x18
* database header
  - compare primary and secondary
* catalog
  - compare primary and secondary
  - limit the size of the catalog ?
  - support for type 0x0006
  - support for type 0x0007 (line 3457 in libesedb_page_tree.c)
* long values
  - support for non-linear stored long value segments - current solution does a sanity check
* default values
   - apply to data definition

Debug
* print file type string
* is function libesedb_debug_print_table_group_of_bits needed?
* print value flags

Tools
* esedbinfo
  - page summary (scan for uninitialized, empty, etc. pages)
  - file header summary (check backup file header)
  - summary of catalog (check backup catalog)
  - print database state
* esedbexport
  - move libesedb file handle from export handle to esedbexport

Windows search:
* improve windows_search_decompress_byte_indexed_compressed_data

File format
* where is the root object defined? or is it implied to be object 1?
* tagged values
  - flag 0x4000
* multi value offsets
  - flag 0x8000
* page flags
* page keys
* (revision 0x11) extended page header
* what about the first byte in 7-bit ascii compressed data
* codepage 1200 string in Exchange EDB starts with 0xff 0xff

Deployment:
* update configure
  - improve libfdata detection
  - improve libfguid detection
  - improve libfwnt detection
* update manuals
  - add esedbexport.1
* create debian package files
* add codegear files

Performance
* create data definition tree in page tree for faster lookup of keys
  keep list for sequential access (B+-tree)
* create a UTF-8 version of run-length compressed UTF-16 string decompression function
* use register alignment for key comparison

Test suite:
* windows search: work on index-based compression
  - create test program to validate output

Notes
* create a root page table instead?
  - no
* read catalog data type defintions and convert them into column definitions?
  - no

20100726
* worked on libfvalue integration
* small performance increase due to cache tuning
* updated msvscpp files

20100725
* updated common
* updated include/error.h and liberror
* updated libuna, libbfio, libfdata, libfdatetime
* split column definition and record value
* worked on libfvalue integration

20100715
* updated libuna

20100714
* added get_table_by_name function
* updated libuna
* fix for open/close/open

20100713
* configure.ac added stat check
* updated common, libsystem, libuna, libbfio, libfdata, libfdatetime,
  libfmapi, libfwnt
* updated array and list type
* changes for updates
* fixed FDP mismatch issue
* updated msvscpp files

20100628
* update for libfmapi

20100627
* updated libuna, libbfio
* code clean up
* added libfmapi

20100626
* worked on big-endian support for aligned XOR-32
* updated macosx files

20100625
* code clean up
  - removed API codepage functions, not needed
  - worked on windows UTF-16 support
  - added several UTF-16 API functions
  - removed page tree values, data definition and tree type
  - create catalog object
  - create database object
* updated msvscpp files
* updated libfdatetime

20100624
* added multi value offset 0x8000 flag support
* esedbexport: added option to export specific table
* updated libfdatetime
* worked on libfwnt

20100623
* worked on libfdata tree integration
* added memory alignment support to XOR32 calculation

20100622
* worked on libfdata tree integration

20100621
* updated libfdata, libbfio
* updated array type
* worked on libfdata fixed list

20100529
* changed libdatablock into libfdata
* worked on libfdata
* fixes for non-debug output
* remove attach/detach functions

20100528
* worked on libdatablock

20100527
* worked on libdatablock

20100526
* worked on reading backup database (file) header
* fixed issue in page key lookup function
* support for additional Windows Search compressed values
* changes for handling root page flag
* changes for handling database with empty catalog

20100525
* fixed issues in page key lookup function
* added error tolerance for non-supported catalog types

20100524
* worked on storing page tree values as a hierarchy
* moved bfio handle to item layer

20100522
* added support for default value
  - read from catalog
* clean up of long value page tree code
* worked on storing page tree values as a hierarchy

20100521
* worked on template table support
* fixed memory leak in libesedb_page_tree_read_leaf_page_values
* worked on large database support
  - branch pages

20100520
* worked on large database support
  - changed page number to 64-bit value
* fixed checksum calculation for new format, old page
* updated msvscpp files
* worked on template table support

20100519
* worked on Windows Vista Search support
* worked on long value support

20100518
* worked on long value support

20100517
* worked on long value support

20100516
* worked on Windows Search index-based compression
* worked on long value support

20100515
* worked on Windows Search index-based compression
* worked on long value support

20100514
* updated common, libcstring, liberror, libnotify, libsystem, libuna
  libbfio, libfdatetime
* renamed libfwintype to libfguid
* changed amount of in number of
* moved bfio handle from io handle to file
* worked on long value support

20100407
* worked on refactoring file io handle out of io handle

20100402
* fixed non 4 byte modulus sized buffers issue in XOR32

20100328
* added libcstring
* updated liberror, libnotify, libsystem, libfdatetime, libuna, libbfio
* removed common/narrow_string.h common/wide_string.h
* worked on libcstring support

20100302
* worked on windows 7 engine support

20100301
* worked on windows 7 engine support

20100227
* worked on windows 7 engine support
* enlarged filetime string to 24

20100224
* worked on windows 7 engine support

20100223
* worked on windows 7 engine support

20100222
* 2010 update and email change
* updated common, liberror, libnotify, libuna, libbfio, libsystem
* updated array, list and tree type
* worked on libnotify update
* worked on windows 7 engine support

20091130
* worked on long value support

20091129
* worked on Windows Search
* worked on multi value support
* worked on long value support
* worked on file format

20091127
* worked on Windows Search

20091125
* worked on file format

20091124
* worked on file format
  - data type definition with fixed and variable size values
    without corresponding definition
  - worked on long value support
* fix for reading files without debug mode

20091123
* worked on file format
* changes for MSVSCPP compilation

20091121
* worked on support of Windows Search Vista database
  - added ASCII 7-bit compression support
* fixed error regarding variable size data type size

20091120
* worked on file format
* fixed ECC for 32-bit architectures
* worked on support of Windows Search Vista database
* fixed memory leak in clean up of index page tree

20091119
* worked on file format
* worked on ECC
* fixed possible memory leak on error
* worked on handling ASCII 7-bit compression
  - additional findings regarding leading byte 0xa0
  - now handles extended ascii strings with leading byte 0x01

20091118
* worked on file format

20091116
* worked on file format

20091115
* updated common, libuna, libbfio, liberror, libnotify, libsystem
  libdatetime
* removed All rights reserved
* updated codepage header
* removed item reference lists and list elements
* replaces endian.h by byte_stream.h
* updated float conversions
* worked on support for callback catalog type

20091013
* some textual corrections

20091012
* change for version 0x620 revision 0x0b

20091009
* worked on EDB revision 2 version of tagged data type definitions

20091008
* added support for empty space tree header
* added support for default value of tagged data type definition
* improved column identifier check in data type definition
* worked on EWF revision 2 version of tagged data type definitions

20091007
* added column get type
* changed output of esedbinfo to print column type

20091006
* worked on page tree support

20091005
* added support for parent pages

20091004
* added missing libesedb_types.h to dist

20091003
* updated libbfio
* corrected license in several of the esedbtool handles
* updated acinclude

20091002
* worked on exporting Windows Search database
* worked on record API

20091001
* worked on page values and data definition types (dynamic version)
* worked on esedbexport
* worked on record API

20090930
* fixed possible memory leak of libbfio handle
* worked on page values and data definition types (dynamic version)
* worked on esedbexport
* worked on record API

20090927
* updated libbfio and libsystem

20090925
* worked on page values and data definition types

20090922
* worked on page values and data definition types

20090921
* worked on page values and data definition types

20090920
* worked on page values and data definition types

20090919
* worked on page values and data definition types
* worked on reading the catalog
* esedbinfo now shows
  - version, revision
  - creation version, revision
  - page size
  - table names
  - index names

20090918
* worked on page values and data definition types

20090917
* worked on page trees
* worked on page values and data definition types
* refactored creation of array out of libesedb_page_read_tags

20090916
* worked on unknown values in file header
* worked on page values and data definition types

20090915
* worked on table support
* implement XOR-32 checksum support
* worked on unknown values in file header
* worked on page values and data definition types

20090914
* worked on page trees
* worked on page values and data definition types

20090913
* initial version based on liblnk

