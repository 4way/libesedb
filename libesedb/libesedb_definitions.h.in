/*
 * The internal definitions
 *
 * Copyright (c) 2008-2009, Joachim Metz <forensics@hoffmannbv.nl>,
 * Hoffmann Investigations.
 *
 * Refer to AUTHORS for acknowledgements.
 *
 * This software is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU Lesser General Public License
 * along with this software.  If not, see <http://www.gnu.org/licenses/>.
 */

#if !defined( _LIBESEDB_INTERNAL_DEFINITIONS_H )
#define _LIBESEDB_INTERNAL_DEFINITIONS_H

#include <common.h>
#include <byte_stream.h>

#define LIBESEDB_ENDIAN_BIG						_BYTE_STREAM_ENDIAN_BIG
#define LIBESEDB_ENDIAN_LITTLE						_BYTE_STREAM_ENDIAN_LITTLE

/* Define HAVE_LOCAL_LIBESEDB for local use of libesedb
 */
#if !defined( HAVE_LOCAL_LIBESEDB )
#include <libesedb/definitions.h>

/* The definitions in <libesedb/definitions.h> are copied here
 * for local use of libesedb
 */
#else
#define LIBESEDB_VERSION						@VERSION@

/* The libesedb version string
 */
#define LIBESEDB_VERSION_STRING						"@VERSION@"

/* The libesedb file access
 * bit 1        set to 1 for read access
 * bit 2        set to 1 for write access
 * bit 3-8      not used
 */
#define LIBESEDB_FLAG_READ						0x01
/* Reserved: not supported yet */
#define LIBESEDB_FLAG_WRITE						0x02

/* The libesedb file access macros
 */
#define LIBESEDB_OPEN_READ						( LIBESEDB_FLAG_READ )
/* Reserved: not supported yet */
#define LIBESEDB_OPEN_WRITE						( LIBESEDB_FLAG_WRITE )
/* Reserved: not supported yet */
#define LIBESEDB_OPEN_READ_WRITE					( LIBESEDB_FLAG_READ | LIBESEDB_FLAG_WRITE )

/* The file types
 */
enum LIBESEDB_FILE_TYPES
{
	LIBESEDB_FILE_TYPE_DATABASE					= 0,
	LIBESEDB_FILE_TYPE_STREAMING_FILE				= 1
};

/* The column types
 */
enum LIBESEDB_COLUMN_TYPES
{
	LIBESEDB_COLUMN_TYPE_NULL					= 0,
	LIBESEDB_COLUMN_TYPE_BOOLEAN					= 1,
	LIBESEDB_COLUMN_TYPE_INTEGER_8BIT_UNSIGNED			= 2,
	LIBESEDB_COLUMN_TYPE_INTEGER_16BIT_SIGNED			= 3,
	LIBESEDB_COLUMN_TYPE_INTEGER_32BIT_SIGNED			= 4,
	LIBESEDB_COLUMN_TYPE_CURRENCY					= 5,
	LIBESEDB_COLUMN_TYPE_FLOAT_32BIT				= 6,
	LIBESEDB_COLUMN_TYPE_DOUBLE_64BIT				= 7,
	LIBESEDB_COLUMN_TYPE_DATE_TIME					= 8,
	LIBESEDB_COLUMN_TYPE_BINARY_DATA				= 9,
	LIBESEDB_COLUMN_TYPE_TEXT					= 10,
	LIBESEDB_COLUMN_TYPE_LARGE_BINARY_DATA				= 11,
	LIBESEDB_COLUMN_TYPE_LARGE_TEXT					= 12,
	LIBESEDB_COLUMN_TYPE_SUPER_LARGE_VALUE				= 13,
	LIBESEDB_COLUMN_TYPE_INTEGER_32BIT_UNSIGNED			= 14,
	LIBESEDB_COLUMN_TYPE_INTEGER_64BIT_SIGNED			= 15,
	LIBESEDB_COLUMN_TYPE_GUID					= 16,
	LIBESEDB_COLUMN_TYPE_INTEGER_16BIT_UNSIGNED			= 17
};

#endif

/* The page flags
 */
enum LIBESEDB_PAGE_FLAGS
{
	LIBESEDB_PAGE_FLAG_IS_ROOT					= 0x00000001,
	LIBESEDB_PAGE_FLAG_IS_LEAF					= 0x00000002,
	LIBESEDB_PAGE_FLAG_IS_PARENT					= 0x00000004,
	LIBESEDB_PAGE_FLAG_IS_EMPTY					= 0x00000008,

	LIBESEDB_PAGE_FLAG_IS_SPACE_TREE				= 0x00000020,
	LIBESEDB_PAGE_FLAG_IS_INDEX					= 0x00000040,
	LIBESEDB_PAGE_FLAG_IS_LONG_VALUE				= 0x00000080,

	LIBESEDB_PAGE_FLAG_0x0400					= 0x00000400,
	LIBESEDB_PAGE_FLAG_0x0800					= 0x00000800,

	LIBESEDB_PAGE_FLAG_IS_NEW_RECORD_FORMAT				= 0x00002000
};

/* The catalog definitions types
 */
enum LIBESEDB_CATALOG_DEFINITION_TYPES
{
	LIBESEDB_CATALOG_DEFINITION_TYPE_TABLE				= 1,
	LIBESEDB_CATALOG_DEFINITION_TYPE_COLUMN				= 2,
	LIBESEDB_CATALOG_DEFINITION_TYPE_INDEX				= 3,
	LIBESEDB_CATALOG_DEFINITION_TYPE_LONG_VALUE			= 4,
	LIBESEDB_CATALOG_DEFINITION_TYPE_CALLBACK			= 5
};

/* Definitions of fixed FDP object identifiers
 */
#define LIBESEDB_FDP_OBJECT_IDENTIFIER_DATABASE				1
#define LIBESEDB_FDP_OBJECT_IDENTIFIER_CATALOG				2
#define LIBESEDB_FDP_OBJECT_IDENTIFIER_CATALOG_BACKUP			3

/* Definitions of fixed page numbers
 */
#define LIBESEDB_PAGE_NUMBER_DATABASE					1
#define LIBESEDB_PAGE_NUMBER_CATALOG					4
#define LIBESEDB_PAGE_NUMBER_CATALOG_BACKUP				24

/* The file attribute flags
 */
enum LIBESEDB_FILE_ATTRIBUTE_FLAGS
{
	LIBESEDB_FILE_ATTRIBUTE_FLAG_READ_ONLY				= 0x00000001,
	LIBESEDB_FILE_ATTRIBUTE_FLAG_HIDDEN				= 0x00000002,
	LIBESEDB_FILE_ATTRIBUTE_FLAG_SYSTEM				= 0x00000004,

	LIBESEDB_FILE_ATTRIBUTE_FLAG_DIRECTORY				= 0x00000010,
	LIBESEDB_FILE_ATTRIBUTE_FLAG_ARCHIVE				= 0x00000020,
	LIBESEDB_FILE_ATTRIBUTE_FLAG_DEVICE				= 0x00000040,
	LIBESEDB_FILE_ATTRIBUTE_FLAG_NORMAL				= 0x00000080,
	LIBESEDB_FILE_ATTRIBUTE_FLAG_TEMPORARY				= 0x00000100,
	LIBESEDB_FILE_ATTRIBUTE_FLAG_SPARSE_FILE			= 0x00000200,
	LIBESEDB_FILE_ATTRIBUTE_FLAG_REPARSE_POINT			= 0x00000400,
	LIBESEDB_FILE_ATTRIBUTE_FLAG_COMPRESSED				= 0x00000800,
	LIBESEDB_FILE_ATTRIBUTE_FLAG_OFFLINE				= 0x00001000,
	LIBESEDB_FILE_ATTRIBUTE_FLAG_NOT_CONTENT_INDEXED		= 0x00002000,
	LIBESEDB_FILE_ATTRIBUTE_FLAG_ENCRYPTED				= 0x00004000,

	LIBESEDB_FILE_ATTRIBUTE_FLAG_VIRTUAL				= 0x00010000
};

#endif

